// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Full Version"

// DATE "09/23/2019 18:40:12"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module E10_Comparator (
	a,
	b,
	a0,
	b0,
	y0,
	y1,
	y2);
input 	a;
input 	b;
input 	a0;
input 	b0;
output 	y0;
output 	y1;
output 	y2;

// Design Ports Information
// y0	=>  Location: PIN_AG3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y1	=>  Location: PIN_AF4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y2	=>  Location: PIN_AE6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_AB6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a0	=>  Location: PIN_AD5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b0	=>  Location: PIN_AB5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_AD4,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("E10_Comparator_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \y0~output_o ;
wire \y1~output_o ;
wire \y2~output_o ;
wire \b~input_o ;
wire \b0~input_o ;
wire \a~input_o ;
wire \a0~input_o ;
wire \comb~0_combout ;
wire \WideOr0~0_combout ;
wire \comb~1_combout ;


// Location: IOOBUF_X3_Y0_N16
cycloneive_io_obuf \y0~output (
	.i(\comb~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y0~output_o ),
	.obar());
// synopsys translate_off
defparam \y0~output .bus_hold = "false";
defparam \y0~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N2
cycloneive_io_obuf \y1~output (
	.i(\WideOr0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y1~output_o ),
	.obar());
// synopsys translate_off
defparam \y1~output .bus_hold = "false";
defparam \y1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneive_io_obuf \y2~output (
	.i(!\comb~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y2~output_o ),
	.obar());
// synopsys translate_off
defparam \y2~output .bus_hold = "false";
defparam \y2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N8
cycloneive_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N22
cycloneive_io_ibuf \b0~input (
	.i(b0),
	.ibar(gnd),
	.o(\b0~input_o ));
// synopsys translate_off
defparam \b0~input .bus_hold = "false";
defparam \b0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N8
cycloneive_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N22
cycloneive_io_ibuf \a0~input (
	.i(a0),
	.ibar(gnd),
	.o(\a0~input_o ));
// synopsys translate_off
defparam \a0~input .bus_hold = "false";
defparam \a0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N24
cycloneive_lcell_comb \comb~0 (
// Equation(s):
// \comb~0_combout  = (\b~input_o  & (!\b0~input_o  & (\a~input_o  & \a0~input_o ))) # (!\b~input_o  & ((\a~input_o ) # ((!\b0~input_o  & \a0~input_o ))))

	.dataa(\b~input_o ),
	.datab(\b0~input_o ),
	.datac(\a~input_o ),
	.datad(\a0~input_o ),
	.cin(gnd),
	.combout(\comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb~0 .lut_mask = 16'h7150;
defparam \comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N18
cycloneive_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\b~input_o  & (((\b0~input_o  & !\a0~input_o )) # (!\a~input_o ))) # (!\b~input_o  & (\b0~input_o  & (!\a~input_o  & !\a0~input_o )))

	.dataa(\b~input_o ),
	.datab(\b0~input_o ),
	.datac(\a~input_o ),
	.datad(\a0~input_o ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'h0A8E;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N28
cycloneive_lcell_comb \comb~1 (
// Equation(s):
// \comb~1_combout  = (\b~input_o  & ((\b0~input_o  $ (\a0~input_o )) # (!\a~input_o ))) # (!\b~input_o  & ((\a~input_o ) # (\b0~input_o  $ (\a0~input_o ))))

	.dataa(\b~input_o ),
	.datab(\b0~input_o ),
	.datac(\a~input_o ),
	.datad(\a0~input_o ),
	.cin(gnd),
	.combout(\comb~1_combout ),
	.cout());
// synopsys translate_off
defparam \comb~1 .lut_mask = 16'h7BDE;
defparam \comb~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign y0 = \y0~output_o ;

assign y1 = \y1~output_o ;

assign y2 = \y2~output_o ;

endmodule
