// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Full Version"

// DATE "09/23/2019 18:13:18"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module E7_Priority_Encoder (
	D,
	X,
	Y,
	V);
input 	[0:3] D;
output 	X;
output 	Y;
output 	V;

// Design Ports Information
// X	=>  Location: PIN_AG3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Y	=>  Location: PIN_AF4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// V	=>  Location: PIN_AE6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D[3]	=>  Location: PIN_AB6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D[2]	=>  Location: PIN_AD5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D[1]	=>  Location: PIN_AB5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D[0]	=>  Location: PIN_AD4,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("E7_Priority_Encoder_7_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \X~output_o ;
wire \Y~output_o ;
wire \V~output_o ;
wire \D[3]~input_o ;
wire \D[2]~input_o ;
wire \comb~0_combout ;
wire \D[1]~input_o ;
wire \comb~1_combout ;
wire \D[0]~input_o ;
wire \WideOr0~0_combout ;


// Location: IOOBUF_X3_Y0_N16
cycloneive_io_obuf \X~output (
	.i(!\comb~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\X~output_o ),
	.obar());
// synopsys translate_off
defparam \X~output .bus_hold = "false";
defparam \X~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N2
cycloneive_io_obuf \Y~output (
	.i(\comb~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneive_io_obuf \V~output (
	.i(\WideOr0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\V~output_o ),
	.obar());
// synopsys translate_off
defparam \V~output .bus_hold = "false";
defparam \V~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N8
cycloneive_io_ibuf \D[3]~input (
	.i(D[3]),
	.ibar(gnd),
	.o(\D[3]~input_o ));
// synopsys translate_off
defparam \D[3]~input .bus_hold = "false";
defparam \D[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N22
cycloneive_io_ibuf \D[2]~input (
	.i(D[2]),
	.ibar(gnd),
	.o(\D[2]~input_o ));
// synopsys translate_off
defparam \D[2]~input .bus_hold = "false";
defparam \D[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N24
cycloneive_lcell_comb \comb~0 (
// Equation(s):
// \comb~0_combout  = (!\D[3]~input_o  & !\D[2]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\D[3]~input_o ),
	.datad(\D[2]~input_o ),
	.cin(gnd),
	.combout(\comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb~0 .lut_mask = 16'h000F;
defparam \comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N22
cycloneive_io_ibuf \D[1]~input (
	.i(D[1]),
	.ibar(gnd),
	.o(\D[1]~input_o ));
// synopsys translate_off
defparam \D[1]~input .bus_hold = "false";
defparam \D[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N18
cycloneive_lcell_comb \comb~1 (
// Equation(s):
// \comb~1_combout  = (\D[3]~input_o ) # ((\D[1]~input_o  & !\D[2]~input_o ))

	.dataa(gnd),
	.datab(\D[1]~input_o ),
	.datac(\D[3]~input_o ),
	.datad(\D[2]~input_o ),
	.cin(gnd),
	.combout(\comb~1_combout ),
	.cout());
// synopsys translate_off
defparam \comb~1 .lut_mask = 16'hF0FC;
defparam \comb~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N8
cycloneive_io_ibuf \D[0]~input (
	.i(D[0]),
	.ibar(gnd),
	.o(\D[0]~input_o ));
// synopsys translate_off
defparam \D[0]~input .bus_hold = "false";
defparam \D[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N28
cycloneive_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\D[0]~input_o ) # ((\D[1]~input_o ) # ((\D[3]~input_o ) # (\D[2]~input_o )))

	.dataa(\D[0]~input_o ),
	.datab(\D[1]~input_o ),
	.datac(\D[3]~input_o ),
	.datad(\D[2]~input_o ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'hFFFE;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign X = \X~output_o ;

assign Y = \Y~output_o ;

assign V = \V~output_o ;

endmodule
